<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[卷积神经网络代码实现]]></title>
      <url>/2017/07/03/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p><img src="https://ggg.9170.gs/hexo/img/jj-mb.png" alt="&quot;jj-md&quot;"></p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: UTF-8 -*-</span>
<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token keyword">import</span> tensorflow<span class="token punctuation">.</span>examples<span class="token punctuation">.</span>tutorials<span class="token punctuation">.</span>mnist<span class="token punctuation">.</span>input_data ad input_data
mnist <span class="token operator">=</span> input_data<span class="token punctuation">.</span>read_data_sets<span class="token punctuation">(</span><span class="token string">"data/"</span><span class="token punctuation">,</span> one_hot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#训练集的image</span>
x <span class="token operator">=</span> tf<span class="token punctuation">.</span>placeholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> <span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">784</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#训练集的label</span>
y_actual <span class="token operator">=</span> tf<span class="token punctuation">.</span>palceholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> <span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#定义一个函数，用于初始化所有权值 w</span>
<span class="token keyword">def</span> <span class="token function">weight_variable</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span><span class="token punctuation">:</span>
    initial <span class="token operator">=</span> tf<span class="token punctuation">.</span>truncated_normal<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> stddev<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> tr<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>initial<span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#定义一个函数，用于初始化所有的偏置值 b</span>
<span class="token keyword">def</span> <span class="token function">bias_variable</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span><span class="token punctuation">:</span>
    initial <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> shape<span class="token operator">=</span>shape<span class="token punctuation">)</span>
    <span class="token keyword">return</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>initial<span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#定义一个函数，用于构建卷积层</span>
<span class="token keyword">def</span> <span class="token function">conv2d</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>conv2d<span class="token punctuation">(</span>x<span class="token punctuation">,</span> w<span class="token punctuation">,</span>strides<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token string">'SAME'</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#定义一个函数，用于构建池化层</span>
<span class="token keyword">def</span> <span class="token function">max_pool</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> tr<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>max_pool<span class="token punctuation">(</span>x<span class="token punctuation">,</span> ksize<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> strides<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token string">'SAME'</span><span class="token punctuation">)</span>

x_image <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#构建网络</span>
w_conv1 <span class="token operator">=</span> weight_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b_conv1 <span class="token operator">=</span> bias_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

h_conv1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>conv2d<span class="token punctuation">(</span>x_image<span class="token punctuation">,</span>w_conv1<span class="token punctuation">)</span><span class="token operator">+</span>b_conv1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#第一个卷积层</span>
h_pool1 <span class="token operator">=</span> max_pool<span class="token punctuation">(</span>h_conv1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#第一个池化层</span>

w_conv2 <span class="token operator">=</span> weight_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b_conv2 <span class="token operator">=</span> bias_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
h_conv2 <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>conv2d<span class="token punctuation">(</span>h_pool1<span class="token punctuation">,</span>w_conv2<span class="token punctuation">)</span><span class="token operator">+</span>b_conv2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#第二个卷积层</span>
h_poopl2 <span class="token operator">=</span> max_pool<span class="token punctuation">(</span>h_conv2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#第二个池化层</span>

w_fcl <span class="token operator">=</span> weight_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b_fcl <span class="token operator">=</span> bias_variables<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
h_pool2_flat <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>h_pool2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#reshape成向量</span>

keep_prob <span class="token operator">=</span> tf<span class="token punctuation">.</span>palceholder<span class="token punctuation">(</span><span class="token string">"float"</span><span class="token punctuation">)</span>
h_fcl_drop <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>dropout<span class="token punctuation">(</span>h_fcl<span class="token punctuation">,</span> keep_prob<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#dropout层</span>

w_fc2 <span class="token operator">=</span> weight_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b_fc2 <span class="token operator">=</span> bias_variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
y_predict <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>h_fcl_drop<span class="token punctuation">,</span> w_fc2<span class="token punctuation">)</span> <span class="token operator">+</span> b_fc2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#softmax层</span>

croos_entropy <span class="token operator">=</span> <span class="token operator">-</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>y_actual <span class="token operator">*</span> tf<span class="token punctuation">.</span>log<span class="token punctuation">(</span>y_predict<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#交叉熵</span>
train_step <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>GradientDescentOptimizer<span class="token punctuation">(</span><span class="token number">1e</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>minimize<span class="token punctuation">(</span>cross_entropy<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#梯度下降法</span>
correct_prediction <span class="token operator">=</span> tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>y_predict<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>y_actual<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
accuracy <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>correct_prediction<span class="token punctuation">,</span><span class="token string">'float'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#精度计算</span>

init <span class="token operator">=</span> tf<span class="token punctuation">.</span>initializer_all_variables<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>
    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        batch <span class="token operator">=</span> mnist<span class="token punctuation">.</span>train<span class="token punctuation">.</span>next_batch<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">1000</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            train_acc <span class="token operator">=</span>accuracy<span class="token punctuation">.</span>eval<span class="token punctuation">(</span>feed_dict<span class="token operator">=</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> batch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>y_yctual<span class="token punctuation">:</span> batch<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>keep_prob<span class="token punctuation">:</span><span class="token number">1.0</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span> <span class="token string">"step"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">"training accuracy"</span><span class="token punctuation">,</span>train_acc
        train_step<span class="token punctuation">.</span>run<span class="token punctuation">(</span>feed_dic<span class="token operator">=</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span>batch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>y_actual<span class="token punctuation">:</span>batch<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>keep_prob<span class="token punctuation">;</span><span class="token number">0.5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    test_acc <span class="token operator">=</span> accuracy<span class="token punctuation">.</span>eval<span class="token punctuation">(</span>feed_dict<span class="token operator">=</span><span class="token punctuation">{</span>x<span class="token punctuation">;</span>mnist<span class="token punctuation">.</span>test<span class="token punctuation">.</span>images<span class="token punctuation">,</span> y_actual<span class="token punctuation">:</span>mnist<span class="token punctuation">,</span>test<span class="token punctuation">,</span>labels<span class="token punctuation">,</span> keep_prob<span class="token punctuation">:</span><span class="token number">1.0</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token string">"test accuracy"</span><span class="token punctuation">,</span>test_acc
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> TensorFlow </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[卷积神经网络（CNN)]]></title>
      <url>/2017/07/03/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN/</url>
      <content type="html"><![CDATA[<h2 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h2><ul>
<li>优点：<br><br>CNN可以得出原始图像的有效表征，通过<font color="red">极少的预处理</font>，识别视觉上的规律。</li>
<li>适用领域：<br><br>  语音识别、图像识别</li>
<li>结构分类：<br><br>  特征提取层、特征映射层</li>
</ul>
<p><img src="https://ggg.9170.gs/hexo/img/jjsjwljg.png" alt="&quot;jjsjwl&quot;"><br><img src="https://ggg.9170.gs/jj-jjc.png" alt="&quot;jjc&quot;"><br><img src="https://ggg.9170.gs/hexo/img/jj-jhhs.png" alt="&quot;jhhs&quot;"><br><img src="https://ggg.9170.gs/jj-ch.png" alt="&quot;ch&quot;"><br><img src="https://ggg.9170.gs/hexo/img/jj-clj.png" alt="&quot;clj&quot;"></p>
]]></content>
      
        <categories>
            
            <category> TensorFlow </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TensorFlow逻辑回归代码实现]]></title>
      <url>/2017/07/03/TensorFlow%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>##TensorFlow逻辑回归代码实现</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: UTF-8 -*-</span>
<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token comment" spellcheck="true">#导入数据集</span>
<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>examples<span class="token punctuation">.</span>tutorials<span class="token punctuation">.</span>mnist <span class="token keyword">import</span> input_data
mnist <span class="token operator">=</span> input_data<span class="token punctuation">.</span>read_data_sets<span class="token punctuation">(</span><span class="token string">"data/"</span><span class="token punctuation">,</span> one_hot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#变量</span>
batch_size <span class="token operator">=</span> <span class="token number">100</span>

<span class="token comment" spellcheck="true">#训练的x(image),y(label)</span>
<span class="token comment" spellcheck="true"># x = tf.Variable() 不使用于大量数据</span>
<span class="token comment" spellcheck="true"># y = tf.Variable() 不使用于大量数据</span>
x <span class="token operator">=</span> tf<span class="token punctuation">.</span>placeholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> <span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">784</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> tf<span class="token punctuation">.</span>placeholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> <span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#模型权重</span>
<span class="token comment" spellcheck="true">#[55000, 784]* w = [55000, 10]</span>
w <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">784</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#用softmax构建逻辑回归模型</span>
pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>x<span class="token punctuation">,</span>w<span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#损失函数（交叉熵）</span>
cost <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>reduce_sum<span class="token punctuation">(</span>y<span class="token operator">*</span>tf<span class="token punctuation">.</span>log<span class="token punctuation">(</span>pred<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true"># 梯度下降</span>
optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>GradientDescentOptimizer<span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">.</span>minimize<span class="token punctuation">(</span>cost<span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#初始变量</span>
init <span class="token operator">=</span> tf<span class="token punctuation">.</span>initialize_all_variables<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#加载session图</span>
<span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>
    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">#开始训练</span>
    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        avg_cost <span class="token operator">=</span> <span class="token number">0</span>

        total_batch<span class="token operator">=</span> int<span class="token punctuation">(</span>mnist<span class="token punctuation">.</span>train<span class="token punctuation">.</span>num_examples<span class="token operator">/</span>batch_size<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>total_batch<span class="token punctuation">)</span><span class="token punctuation">:</span>
            batch_xs<span class="token punctuation">,</span> batch_ys <span class="token operator">=</span> mnist<span class="token punctuation">.</span>train<span class="token punctuation">.</span>next_batch<span class="token punctuation">(</span>batch_size<span class="token punctuation">)</span>
            sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>optimizer<span class="token punctuation">,</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> batch_xs<span class="token punctuation">,</span>y<span class="token punctuation">:</span> batch_ys<span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token comment" spellcheck="true">#计算平均损失</span>
            avg_cost <span class="token operator">+=</span> sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>cost<span class="token punctuation">,</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span>batch_xs<span class="token punctuation">,</span>y<span class="token punctuation">:</span>batch_ys<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">/</span> total_batch
        <span class="token keyword">if</span> <span class="token punctuation">(</span>epoch<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span> <span class="token string">"avg_cost"</span><span class="token punctuation">,</span>avg_cost
    <span class="token keyword">print</span> <span class="token string">"运行完成"</span>

    <span class="token comment" spellcheck="true">#测试准确率</span>
    correct <span class="token operator">=</span> tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    accuracy <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>correct<span class="token punctuation">,</span> tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token string">"正确率"</span><span class="token punctuation">,</span>accuracy<span class="token punctuation">.</span>eval<span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> mnist<span class="token punctuation">.</span>test<span class="token punctuation">.</span>images<span class="token punctuation">,</span>y<span class="token punctuation">:</span> mnist<span class="token punctuation">.</span>test<span class="token punctuation">.</span>labels<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> TensorFlow </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TensorFlow逻辑回归语法]]></title>
      <url>/2017/07/03/TensorFlow%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><img src="https://ggg.9170.gs/hexo/img/softmax.png" alt="&quot;softmax&quot;"></p>
<h3 id="语法部分"><a href="#语法部分" class="headerlink" title="语法部分"></a>语法部分</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment" spellcheck="true">#占位符，适用于不知道具体参数</span>
x <span class="token operator">=</span> tf<span class="token punctuation">.</span>placeholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> tf<span class="token punctuation">.</span>add<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>

argmax_paramter <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#最大列索引</span>
argmax_0 <span class="token operator">=</span> tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>argmax_paramter<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#最大行索引</span>
argmax_1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>argmax_paramter<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#平均数</span>
reduce_0 <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>argmax_paramter<span class="token punctuation">,</span> reduction_indices<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
reduce_1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>argmax_paramter<span class="token punctuation">,</span> raduction_indices<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#相等</span>
equal_0 <span class="token operator">=</span> tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
equal_1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#类型转换</span>
cast_0 <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>equal_0<span class="token punctuation">,</span> tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>
casr_1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>equal_1<span class="token punctuation">,</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>

<span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>
    init <span class="token operator">=</span> tf<span class="token punctuation">.</span>variables_all_initializer<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init<span class="token punctuation">)</span>

    rand_array <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>y<span class="token punctuation">,</span> feed_dict<span class="token operator">=</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> rand_array<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> TensorFlow </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[线性回归使用到的TensorFlow语法]]></title>
      <url>/2017/07/03/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84TensorFlow%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>##基础语法部分</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf

<span class="token comment" spellcheck="true">#-----------准备阶段-----------</span>
a <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c------->'</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#创建用0填充的矩阵</span>
d <span class="token operator">=</span> tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#平方</span>
e <span class="token operator">=</span> tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#平均值</span>
f <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#均匀分布的随机数</span>
q <span class="token operator">=</span> tf<span class="token punctuation">.</span>random_uniform<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#------------执行阶段-----------</span>
<span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true">#初始所有的变量</span>
    init <span class="token operator">=</span> tf<span class="token punctuation">.</span>global_variables_initializer<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>##代码实现部分</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: UTF-8 -*-</span>
<span class="token comment" spellcheck="true"># 一元的线性回归模型的训练</span>
<span class="token comment" spellcheck="true"># 1.通过训练数据推测出线性回归函数（y = w * x + b）中的w 和 b的值</span>
<span class="token comment" spellcheck="true"># 2.通过验证数据，验证得到的函数是否符合预期</span>

<span class="token comment" spellcheck="true">#引入tensorflow</span>
<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token comment" spellcheck="true">#引入绘图标</span>

<span class="token comment" spellcheck="true">#引入数据模块</span>
<span class="token keyword">import</span> testData <span class="token keyword">as</span> td

<span class="token comment" spellcheck="true"># 1.获得训练数据</span>
<span class="token comment" spellcheck="true"># testData</span>
<span class="token comment" spellcheck="true"># get_train_data 获得训练数据，参数data_length(获得数据的个数)返回：二维数组[0]代表x [1]代表y</span>
<span class="token comment" spellcheck="true"># get_validata_data 获得验证数据 参数：data_length(数据个数) 返回二维数组 二维数组[0]代表x [1]代表y</span>

trainData <span class="token operator">=</span> td<span class="token punctuation">.</span>get_train_data<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
trainx <span class="token operator">=</span> <span class="token punctuation">[</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> v <span class="token keyword">in</span> trainData<span class="token punctuation">]</span>
trainy <span class="token operator">=</span> <span class="token punctuation">[</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> v <span class="token keyword">in</span> trainData<span class="token punctuation">]</span>

<span class="token comment" spellcheck="true">#2.构造预测的线性回归函数 y = w * x +b</span>
w <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random_uniform<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> w <span class="token operator">*</span> trainx <span class="token operator">+</span> b

<span class="token comment" spellcheck="true">#3.判断假设函数的好坏</span>
<span class="token comment" spellcheck="true"># 代价函数</span>

cost <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>square<span class="token punctuation">(</span>y<span class="token operator">-</span>trainy<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#4.调整假设函数</span>
<span class="token comment" spellcheck="true">#梯度下降算法找最优解</span>
optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>GradientDescentOptimizer<span class="token punctuation">(</span><span class="token number">0.08</span><span class="token punctuation">)</span>
train <span class="token operator">=</span> optimizer<span class="token punctuation">.</span>minimize<span class="token punctuation">(</span>cost<span class="token punctuation">)</span>

<span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true">#--------初始化所有变量值--------</span>
    init <span class="token operator">=</span> tf<span class="token punctuation">.</span>initialize_all_variables<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#replaced initialize_all_variables with global_variables_initializer</span>
    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#初始化w.b的值</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"cost="</span><span class="token punctuation">,</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>cost<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"w="</span><span class="token punctuation">,</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"b="</span><span class="token punctuation">,</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#循环运行</span>
    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>train<span class="token punctuation">)</span>
        <span class="token comment" spellcheck="true">#输出训练好的w和b</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"cost="</span><span class="token punctuation">,</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>cost<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"w="</span><span class="token punctuation">,</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"b="</span><span class="token punctuation">,</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"执行完成"</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true">#构造图形结构</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> TensorFlow </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TensorFlow 一元线性回归]]></title>
      <url>/2017/07/03/TensorFlow%20%E4%B8%80%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      <content type="html"><![CDATA[<h2 id="TensorFlow实现一元线性回归模型"><a href="#TensorFlow实现一元线性回归模型" class="headerlink" title="TensorFlow实现一元线性回归模型"></a>TensorFlow实现一元线性回归模型</h2><p>(x y)<br><br>&nbsp;1 3<br><br>&nbsp;1 5.1<br><br>&nbsp;1 6.99<br></p>
<blockquote>
<p>y = w * x + b;</p>
</blockquote>
<h3 id="1-假设一个线性回归模型"><a href="#1-假设一个线性回归模型" class="headerlink" title="1.假设一个线性回归模型"></a>1.假设一个线性回归模型</h3><blockquote>
<p>h(x) = 3 * x + 5;</p>
</blockquote>
<h3 id="2-判断这个假设线性回归模型对不对"><a href="#2-判断这个假设线性回归模型对不对" class="headerlink" title="2.判断这个假设线性回归模型对不对"></a>2.判断这个假设线性回归模型对不对</h3><blockquote>
<p>3 * 1 + 5 = 8</p>
</blockquote>
<p>代价函数：均方差<br>（（8 - 3）的平方 + (11 - 5.1)的平方+(14 - 6.99)的平方）/ 2*3</p>
<h3 id="3-判断这个模型参数"><a href="#3-判断这个模型参数" class="headerlink" title="3.判断这个模型参数"></a>3.判断这个模型参数</h3><pre><code>h(x) = 2.8 * x + 4;
h(x) = 2.6 * x +3;
.
.
.
h(x) = 2.0 * x + 1;
</code></pre><p>求最优解算法：</p>
<p>梯度下降：</p>
<h3 id="4-得到符合要求的线性回归模型"><a href="#4-得到符合要求的线性回归模型" class="headerlink" title="4.得到符合要求的线性回归模型"></a>4.得到符合要求的线性回归模型</h3><p>h(x) = 2.0 * x + 1;</p>
<h3 id="5-用验证数据验证下训练出来的模型对不对"><a href="#5-用验证数据验证下训练出来的模型对不对" class="headerlink" title="5.用验证数据验证下训练出来的模型对不对"></a>5.用验证数据验证下训练出来的模型对不对</h3><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.获得训练数据和验证数据（一堆（x，y）组成的训练点）</p>
<p>2.假设一个一元线性回归函数 （a = w*x +b）</p>
<p>3.判断假设函数的好坏 (代价函数)</p>
<p>4.调整假设的一元线性回归函数 (梯度下降算法 学习率)</p>
<p>5.得到最优的预测一元线性回归函数 (y = w*x +b)</p>
<p>6.根据验证数据验证函数是否符合要求</p>
]]></content>
      
        <categories>
            
            <category> TensorFlow </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/07/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[About me]]></title>
      <url>/about.html</url>
      <content type="html"><![CDATA[<h2 id="About-me"><a href="#About-me" class="headerlink" title="About me"></a>About me</h2><p> <code>/tataki/</code></p>
<p><br><br>喜欢尝试新鲜事物</p>
<p>喜欢和有趣的人打交道</p>
<p>对二战历史有着浓厚兴趣</p>
<p>喜欢一些小众东西</p>
<p>游戏方面：</p>
<blockquote>
<ul>
<li>比如降智商的 OSU(欧屎)</li>
</ul>
</blockquote>
<p>生活方面：</p>
<blockquote>
<ul>
<li>玄学(论火电，水电，风电，核电对音质的影响)</li>
</ul>
</blockquote>
<h3 id="Also"><a href="#Also" class="headerlink" title="Also"></a>Also</h3><p>不喜欢一成不变的东西</p>
<p>不喜欢随波逐流</p>
<p>对Sony家的产品有特殊信仰</p>
<blockquote>
<h3 id="Make-Believe"><a href="#Make-Believe" class="headerlink" title="Make Believe"></a>Make Believe</h3></blockquote>
<p>对Google家的技术跪舔</p>
<blockquote>
<font color="gray" size="6"> 代码和网易云音乐是绝配</font>

</blockquote>
<h2 id="Find-me"><a href="#Find-me" class="headerlink" title="Find me?"></a>Find me?</h2><p><font size="4">QQ</font>:U2FsdGVkX19HY8ZQ9F3wzNDD/DxyoG2pIltnnWs66ng=</p>
<p><font size="4">Telegram</font>:Orange Tataki</p>
<p><font size="4">网易云音乐</font>:<a href="http://music.163.com/#/user/home?id=51335046" target="_blank" rel="external">KamioYuki</a></p>
<p><font size="4">email</font>:orangeyao@outlook.com</p>
<p><font size="4">QQ群</font>:531672842</p>
<p><font size="4">G猫加速</font>:<a href="https://www.ggg.moe" target="_blank" rel="external">Link</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[About me]]></title>
      <url>/about/about.html</url>
      <content type="html"><![CDATA[<h2 id="About-me"><a href="#About-me" class="headerlink" title="About me"></a>About me</h2><p> <code>/tataki/</code></p>
<p><br><br>喜欢尝试新鲜事物</p>
<p>喜欢和有趣的人打交道</p>
<p>对二战历史有着浓厚兴趣</p>
<p>喜欢一些小众东西</p>
<p>游戏方面：</p>
<blockquote>
<ul>
<li>比如降智商的 OSU(欧屎)</li>
</ul>
</blockquote>
<p>生活方面：</p>
<blockquote>
<ul>
<li>玄学(论火电，水电，风电，核电对音质的影响)</li>
</ul>
</blockquote>
<h3 id="Also"><a href="#Also" class="headerlink" title="Also"></a>Also</h3><p>不喜欢一成不变的东西</p>
<p>不喜欢随波逐流</p>
<p>对Sony家的产品有特殊信仰</p>
<blockquote>
<h3 id="Make-Believe"><a href="#Make-Believe" class="headerlink" title="Make Believe"></a>Make Believe</h3></blockquote>
<p>对Google家的技术跪舔</p>
<blockquote>
<font color="gray" size="6"> 代码和网易云音乐是绝配</font>

</blockquote>
<h2 id="Find-me"><a href="#Find-me" class="headerlink" title="Find me?"></a>Find me?</h2><p><font size="4">QQ</font>:U2FsdGVkX19HY8ZQ9F3wzNDD/DxyoG2pIltnnWs66ng=</p>
<p><font size="4">Telegram</font>:Orange Tataki</p>
<p><font size="4">网易云音乐</font>:<a href="http://music.163.com/#/user/home?id=51335046" target="_blank" rel="external">KamioYuki</a></p>
<p><font size="4">email</font>:orangeyao@outlook.com</p>
<p><font size="4">QQ群</font>:531672842</p>
<p><font size="4">G猫加速</font>:<a href="https://www.ggg.moe" target="_blank" rel="external">Link</a></p>
]]></content>
    </entry>
    
  
</search>
